{"remainingRequest":"/Users/coulson/go/src/go-micro-gateway/vue-element-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/coulson/go/src/go-micro-gateway/vue-element-admin/src/views/dashboard/admin/components/TodoList/Todo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/coulson/go/src/go-micro-gateway/vue-element-admin/src/views/dashboard/admin/components/TodoList/Todo.vue","mtime":1597304033226},{"path":"/Users/coulson/go/src/go-micro-gateway/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/coulson/go/src/go-micro-gateway/vue-element-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/coulson/go/src/go-micro-gateway/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/coulson/go/src/go-micro-gateway/vue-element-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVG9kbycsCiAgZGlyZWN0aXZlczogewogICAgZm9jdXMoZWwsIHsgdmFsdWUgfSwgeyBjb250ZXh0IH0pIHsKICAgICAgaWYgKHZhbHVlKSB7CiAgICAgICAgY29udGV4dC4kbmV4dFRpY2soKCkgPT4gewogICAgICAgICAgZWwuZm9jdXMoKQogICAgICAgIH0pCiAgICAgIH0KICAgIH0KICB9LAogIHByb3BzOiB7CiAgICB0b2RvOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIHt9CiAgICAgIH0KICAgIH0KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBlZGl0aW5nOiBmYWxzZQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZGVsZXRlVG9kbyh0b2RvKSB7CiAgICAgIHRoaXMuJGVtaXQoJ2RlbGV0ZVRvZG8nLCB0b2RvKQogICAgfSwKICAgIGVkaXRUb2RvKHsgdG9kbywgdmFsdWUgfSkgewogICAgICB0aGlzLiRlbWl0KCdlZGl0VG9kbycsIHsgdG9kbywgdmFsdWUgfSkKICAgIH0sCiAgICB0b2dnbGVUb2RvKHRvZG8pIHsKICAgICAgdGhpcy4kZW1pdCgndG9nZ2xlVG9kbycsIHRvZG8pCiAgICB9LAogICAgZG9uZUVkaXQoZSkgewogICAgICBjb25zdCB2YWx1ZSA9IGUudGFyZ2V0LnZhbHVlLnRyaW0oKQogICAgICBjb25zdCB7IHRvZG8gfSA9IHRoaXMKICAgICAgaWYgKCF2YWx1ZSkgewogICAgICAgIHRoaXMuZGVsZXRlVG9kbyh7CiAgICAgICAgICB0b2RvCiAgICAgICAgfSkKICAgICAgfSBlbHNlIGlmICh0aGlzLmVkaXRpbmcpIHsKICAgICAgICB0aGlzLmVkaXRUb2RvKHsKICAgICAgICAgIHRvZG8sCiAgICAgICAgICB2YWx1ZQogICAgICAgIH0pCiAgICAgICAgdGhpcy5lZGl0aW5nID0gZmFsc2UKICAgICAgfQogICAgfSwKICAgIGNhbmNlbEVkaXQoZSkgewogICAgICBlLnRhcmdldC52YWx1ZSA9IHRoaXMudG9kby50ZXh0CiAgICAgIHRoaXMuZWRpdGluZyA9IGZhbHNlCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Todo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Todo.vue","sourceRoot":"src/views/dashboard/admin/components/TodoList","sourcesContent":["<template>\n  <li :class=\"{ completed: todo.done, editing: editing }\" class=\"todo\">\n    <div class=\"view\">\n      <input\n        :checked=\"todo.done\"\n        class=\"toggle\"\n        type=\"checkbox\"\n        @change=\"toggleTodo( todo)\"\n      >\n      <label @dblclick=\"editing = true\" v-text=\"todo.text\" />\n      <button class=\"destroy\" @click=\"deleteTodo( todo )\" />\n    </div>\n    <input\n      v-show=\"editing\"\n      v-focus=\"editing\"\n      :value=\"todo.text\"\n      class=\"edit\"\n      @keyup.enter=\"doneEdit\"\n      @keyup.esc=\"cancelEdit\"\n      @blur=\"doneEdit\"\n    >\n  </li>\n</template>\n\n<script>\nexport default {\n  name: 'Todo',\n  directives: {\n    focus(el, { value }, { context }) {\n      if (value) {\n        context.$nextTick(() => {\n          el.focus()\n        })\n      }\n    }\n  },\n  props: {\n    todo: {\n      type: Object,\n      default: function() {\n        return {}\n      }\n    }\n  },\n  data() {\n    return {\n      editing: false\n    }\n  },\n  methods: {\n    deleteTodo(todo) {\n      this.$emit('deleteTodo', todo)\n    },\n    editTodo({ todo, value }) {\n      this.$emit('editTodo', { todo, value })\n    },\n    toggleTodo(todo) {\n      this.$emit('toggleTodo', todo)\n    },\n    doneEdit(e) {\n      const value = e.target.value.trim()\n      const { todo } = this\n      if (!value) {\n        this.deleteTodo({\n          todo\n        })\n      } else if (this.editing) {\n        this.editTodo({\n          todo,\n          value\n        })\n        this.editing = false\n      }\n    },\n    cancelEdit(e) {\n      e.target.value = this.todo.text\n      this.editing = false\n    }\n  }\n}\n</script>\n"]}]}