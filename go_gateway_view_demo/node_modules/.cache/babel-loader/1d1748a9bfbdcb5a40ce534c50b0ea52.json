{"remainingRequest":"/Users/coulson/go/src/go-micro-gateway/go_gateway_view_demo/node_modules/babel-loader/lib/index.js!/Users/coulson/go/src/go-micro-gateway/go_gateway_view_demo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/coulson/go/src/go-micro-gateway/go_gateway_view_demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/coulson/go/src/go-micro-gateway/go_gateway_view_demo/src/views/icons/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/coulson/go/src/go-micro-gateway/go_gateway_view_demo/src/views/icons/index.vue","mtime":1597304624022},{"path":"/Users/coulson/go/src/go-micro-gateway/go_gateway_view_demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/coulson/go/src/go-micro-gateway/go_gateway_view_demo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/coulson/go/src/go-micro-gateway/go_gateway_view_demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/coulson/go/src/go-micro-gateway/go_gateway_view_demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGNsaXBib2FyZCBmcm9tICdAL3V0aWxzL2NsaXBib2FyZCc7CmltcG9ydCBzdmdJY29ucyBmcm9tICcuL3N2Zy1pY29ucyc7CmltcG9ydCBlbGVtZW50SWNvbnMgZnJvbSAnLi9lbGVtZW50LWljb25zJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdJY29ucycsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHN2Z0ljb25zOiBzdmdJY29ucywKICAgICAgZWxlbWVudEljb25zOiBlbGVtZW50SWNvbnMKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZW5lcmF0ZUljb25Db2RlOiBmdW5jdGlvbiBnZW5lcmF0ZUljb25Db2RlKHN5bWJvbCkgewogICAgICByZXR1cm4gIjxzdmctaWNvbiBpY29uLWNsYXNzPVwiIi5jb25jYXQoc3ltYm9sLCAiXCIgLz4iKTsKICAgIH0sCiAgICBnZW5lcmF0ZUVsZW1lbnRJY29uQ29kZTogZnVuY3Rpb24gZ2VuZXJhdGVFbGVtZW50SWNvbkNvZGUoc3ltYm9sKSB7CiAgICAgIHJldHVybiAiPGkgY2xhc3M9XCJlbC1pY29uLSIuY29uY2F0KHN5bWJvbCwgIlwiIC8+Iik7CiAgICB9LAogICAgaGFuZGxlQ2xpcGJvYXJkOiBmdW5jdGlvbiBoYW5kbGVDbGlwYm9hcmQodGV4dCwgZXZlbnQpIHsKICAgICAgY2xpcGJvYXJkKHRleHQsIGV2ZW50KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA,OAAA,SAAA,MAAA,mBAAA;AACA,OAAA,QAAA,MAAA,aAAA;AACA,OAAA,YAAA,MAAA,iBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,QADA;AAEA,MAAA,YAAA,EAAA;AAFA,KAAA;AAIA,GAPA;AAQA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,4BACA,MADA,EACA;AACA,8CAAA,MAAA;AACA,KAHA;AAIA,IAAA,uBAJA,mCAIA,MAJA,EAIA;AACA,0CAAA,MAAA;AACA,KANA;AAOA,IAAA,eAPA,2BAOA,IAPA,EAOA,KAPA,EAOA;AACA,MAAA,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA;AACA;AATA;AARA,CAAA","sourcesContent":["<template>\n  <div class=\"icons-container\">\n    <aside>\n      <a href=\"https://panjiachen.github.io/vue-element-admin-site/guide/advanced/icon.html\" target=\"_blank\">Add and use\n      </a>\n    </aside>\n    <el-tabs type=\"border-card\">\n      <el-tab-pane label=\"Icons\">\n        <div class=\"grid\">\n          <div v-for=\"item of svgIcons\" :key=\"item\" @click=\"handleClipboard(generateIconCode(item),$event)\">\n            <el-tooltip placement=\"top\">\n              <div slot=\"content\">\n                {{ generateIconCode(item) }}\n              </div>\n              <div class=\"icon-item\">\n                <svg-icon :icon-class=\"item\" class-name=\"disabled\" />\n                <span>{{ item }}</span>\n              </div>\n            </el-tooltip>\n          </div>\n        </div>\n      </el-tab-pane>\n      <el-tab-pane label=\"Element-UI Icons\">\n        <div class=\"grid\">\n          <div v-for=\"item of elementIcons\" :key=\"item\" @click=\"handleClipboard(generateElementIconCode(item),$event)\">\n            <el-tooltip placement=\"top\">\n              <div slot=\"content\">\n                {{ generateElementIconCode(item) }}\n              </div>\n              <div class=\"icon-item\">\n                <i :class=\"'el-icon-' + item\" />\n                <span>{{ item }}</span>\n              </div>\n            </el-tooltip>\n          </div>\n        </div>\n      </el-tab-pane>\n    </el-tabs>\n  </div>\n</template>\n\n<script>\nimport clipboard from '@/utils/clipboard'\nimport svgIcons from './svg-icons'\nimport elementIcons from './element-icons'\n\nexport default {\n  name: 'Icons',\n  data() {\n    return {\n      svgIcons,\n      elementIcons\n    }\n  },\n  methods: {\n    generateIconCode(symbol) {\n      return `<svg-icon icon-class=\"${symbol}\" />`\n    },\n    generateElementIconCode(symbol) {\n      return `<i class=\"el-icon-${symbol}\" />`\n    },\n    handleClipboard(text, event) {\n      clipboard(text, event)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.icons-container {\n  margin: 10px 20px 0;\n  overflow: hidden;\n\n  .grid {\n    position: relative;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\n  }\n\n  .icon-item {\n    margin: 20px;\n    height: 85px;\n    text-align: center;\n    width: 100px;\n    float: left;\n    font-size: 30px;\n    color: #24292e;\n    cursor: pointer;\n  }\n\n  span {\n    display: block;\n    font-size: 16px;\n    margin-top: 10px;\n  }\n\n  .disabled {\n    pointer-events: none;\n  }\n}\n</style>\n"],"sourceRoot":"src/views/icons"}]}