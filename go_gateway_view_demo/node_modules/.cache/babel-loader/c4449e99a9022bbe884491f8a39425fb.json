{"remainingRequest":"/Users/coulson/go/src/go-micro-gateway/go_gateway_view_demo/node_modules/babel-loader/lib/index.js!/Users/coulson/go/src/go-micro-gateway/go_gateway_view_demo/node_modules/eslint-loader/index.js??ref--13-0!/Users/coulson/go/src/go-micro-gateway/go_gateway_view_demo/src/filters/index.js","dependencies":[{"path":"/Users/coulson/go/src/go-micro-gateway/go_gateway_view_demo/src/filters/index.js","mtime":1597304623941},{"path":"/Users/coulson/go/src/go-micro-gateway/go_gateway_view_demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/coulson/go/src/go-micro-gateway/go_gateway_view_demo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/coulson/go/src/go-micro-gateway/go_gateway_view_demo/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIudG8tZml4ZWQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiOwovLyBpbXBvcnQgcGFyc2VUaW1lLCBmb3JtYXRUaW1lIGFuZCBzZXQgdG8gZmlsdGVyCmV4cG9ydCB7IHBhcnNlVGltZSwgZm9ybWF0VGltZSB9IGZyb20gJ0AvdXRpbHMnOwovKioKICogU2hvdyBwbHVyYWwgbGFiZWwgaWYgdGltZSBpcyBwbHVyYWwgbnVtYmVyCiAqIEBwYXJhbSB7bnVtYmVyfSB0aW1lCiAqIEBwYXJhbSB7c3RyaW5nfSBsYWJlbAogKiBAcmV0dXJuIHtzdHJpbmd9CiAqLwoKZnVuY3Rpb24gcGx1cmFsaXplKHRpbWUsIGxhYmVsKSB7CiAgaWYgKHRpbWUgPT09IDEpIHsKICAgIHJldHVybiB0aW1lICsgbGFiZWw7CiAgfQoKICByZXR1cm4gdGltZSArIGxhYmVsICsgJ3MnOwp9Ci8qKgogKiBAcGFyYW0ge251bWJlcn0gdGltZQogKi8KCgpleHBvcnQgZnVuY3Rpb24gdGltZUFnbyh0aW1lKSB7CiAgdmFyIGJldHdlZW4gPSBEYXRlLm5vdygpIC8gMTAwMCAtIE51bWJlcih0aW1lKTsKCiAgaWYgKGJldHdlZW4gPCAzNjAwKSB7CiAgICByZXR1cm4gcGx1cmFsaXplKH5+KGJldHdlZW4gLyA2MCksICcgbWludXRlJyk7CiAgfSBlbHNlIGlmIChiZXR3ZWVuIDwgODY0MDApIHsKICAgIHJldHVybiBwbHVyYWxpemUofn4oYmV0d2VlbiAvIDM2MDApLCAnIGhvdXInKTsKICB9IGVsc2UgewogICAgcmV0dXJuIHBsdXJhbGl6ZSh+fihiZXR3ZWVuIC8gODY0MDApLCAnIGRheScpOwogIH0KfQovKioKICogTnVtYmVyIGZvcm1hdHRpbmcKICogbGlrZSAxMDAwMCA9PiAxMGsKICogQHBhcmFtIHtudW1iZXJ9IG51bQogKiBAcGFyYW0ge251bWJlcn0gZGlnaXRzCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIG51bWJlckZvcm1hdHRlcihudW0sIGRpZ2l0cykgewogIHZhciBzaSA9IFt7CiAgICB2YWx1ZTogMUUxOCwKICAgIHN5bWJvbDogJ0UnCiAgfSwgewogICAgdmFsdWU6IDFFMTUsCiAgICBzeW1ib2w6ICdQJwogIH0sIHsKICAgIHZhbHVlOiAxRTEyLAogICAgc3ltYm9sOiAnVCcKICB9LCB7CiAgICB2YWx1ZTogMUU5LAogICAgc3ltYm9sOiAnRycKICB9LCB7CiAgICB2YWx1ZTogMUU2LAogICAgc3ltYm9sOiAnTScKICB9LCB7CiAgICB2YWx1ZTogMUUzLAogICAgc3ltYm9sOiAnaycKICB9XTsKCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzaS5sZW5ndGg7IGkrKykgewogICAgaWYgKG51bSA+PSBzaVtpXS52YWx1ZSkgewogICAgICByZXR1cm4gKG51bSAvIHNpW2ldLnZhbHVlKS50b0ZpeGVkKGRpZ2l0cykucmVwbGFjZSgvXC4wKyR8KFwuWzAtOV0qWzEtOV0pMCskLywgJyQxJykgKyBzaVtpXS5zeW1ib2w7CiAgICB9CiAgfQoKICByZXR1cm4gbnVtLnRvU3RyaW5nKCk7Cn0KLyoqCiAqIDEwMDAwID0+ICIxMCwwMDAiCiAqIEBwYXJhbSB7bnVtYmVyfSBudW0KICovCgpleHBvcnQgZnVuY3Rpb24gdG9UaG91c2FuZEZpbHRlcihudW0pIHsKICByZXR1cm4gKCtudW0gfHwgMCkudG9TdHJpbmcoKS5yZXBsYWNlKC9eLT9cZCsvZywgZnVuY3Rpb24gKG0pIHsKICAgIHJldHVybiBtLnJlcGxhY2UoLyg/PSg/IVxiKShcZHszfSkrJCkvZywgJywnKTsKICB9KTsKfQovKioKICogVXBwZXIgY2FzZSBmaXJzdCBjaGFyCiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJpbmcKICovCgpleHBvcnQgZnVuY3Rpb24gdXBwZXJjYXNlRmlyc3Qoc3RyaW5nKSB7CiAgcmV0dXJuIHN0cmluZy5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHN0cmluZy5zbGljZSgxKTsKfQ=="},{"version":3,"sources":["/Users/coulson/go/src/go-micro-gateway/go_gateway_view_demo/src/filters/index.js"],"names":["parseTime","formatTime","pluralize","time","label","timeAgo","between","Date","now","Number","numberFormatter","num","digits","si","value","symbol","i","length","toFixed","replace","toString","toThousandFilter","m","uppercaseFirst","string","charAt","toUpperCase","slice"],"mappings":";;;;;;;AAAA;AACA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,SAAtC;AAEA;;;;;;;AAMA,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,KAAzB,EAAgC;AAC9B,MAAID,IAAI,KAAK,CAAb,EAAgB;AACd,WAAOA,IAAI,GAAGC,KAAd;AACD;;AACD,SAAOD,IAAI,GAAGC,KAAP,GAAe,GAAtB;AACD;AAED;;;;;AAGA,OAAO,SAASC,OAAT,CAAiBF,IAAjB,EAAuB;AAC5B,MAAMG,OAAO,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAb,GAAoBC,MAAM,CAACN,IAAD,CAA1C;;AACA,MAAIG,OAAO,GAAG,IAAd,EAAoB;AAClB,WAAOJ,SAAS,CAAC,CAAC,EAAEI,OAAO,GAAG,EAAZ,CAAF,EAAmB,SAAnB,CAAhB;AACD,GAFD,MAEO,IAAIA,OAAO,GAAG,KAAd,EAAqB;AAC1B,WAAOJ,SAAS,CAAC,CAAC,EAAEI,OAAO,GAAG,IAAZ,CAAF,EAAqB,OAArB,CAAhB;AACD,GAFM,MAEA;AACL,WAAOJ,SAAS,CAAC,CAAC,EAAEI,OAAO,GAAG,KAAZ,CAAF,EAAsB,MAAtB,CAAhB;AACD;AACF;AAED;;;;;;;AAMA,OAAO,SAASI,eAAT,CAAyBC,GAAzB,EAA8BC,MAA9B,EAAsC;AAC3C,MAAMC,EAAE,GAAG,CACT;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,MAAM,EAAE;AAAvB,GADS,EAET;AAAED,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,MAAM,EAAE;AAAvB,GAFS,EAGT;AAAED,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,MAAM,EAAE;AAAvB,GAHS,EAIT;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GAJS,EAKT;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GALS,EAMT;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GANS,CAAX;;AAQA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,EAAE,CAACI,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAClC,QAAIL,GAAG,IAAIE,EAAE,CAACG,CAAD,CAAF,CAAMF,KAAjB,EAAwB;AACtB,aAAO,CAACH,GAAG,GAAGE,EAAE,CAACG,CAAD,CAAF,CAAMF,KAAb,EAAoBI,OAApB,CAA4BN,MAA5B,EAAoCO,OAApC,CAA4C,0BAA5C,EAAwE,IAAxE,IAAgFN,EAAE,CAACG,CAAD,CAAF,CAAMD,MAA7F;AACD;AACF;;AACD,SAAOJ,GAAG,CAACS,QAAJ,EAAP;AACD;AAED;;;;;AAIA,OAAO,SAASC,gBAAT,CAA0BV,GAA1B,EAA+B;AACpC,SAAO,CAAC,CAACA,GAAD,IAAQ,CAAT,EAAYS,QAAZ,GAAuBD,OAAvB,CAA+B,SAA/B,EAA0C,UAAAG,CAAC;AAAA,WAAIA,CAAC,CAACH,OAAF,CAAU,sBAAV,EAAkC,GAAlC,CAAJ;AAAA,GAA3C,CAAP;AACD;AAED;;;;;AAIA,OAAO,SAASI,cAAT,CAAwBC,MAAxB,EAAgC;AACrC,SAAOA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCF,MAAM,CAACG,KAAP,CAAa,CAAb,CAAxC;AACD","sourcesContent":["// import parseTime, formatTime and set to filter\nexport { parseTime, formatTime } from '@/utils'\n\n/**\n * Show plural label if time is plural number\n * @param {number} time\n * @param {string} label\n * @return {string}\n */\nfunction pluralize(time, label) {\n  if (time === 1) {\n    return time + label\n  }\n  return time + label + 's'\n}\n\n/**\n * @param {number} time\n */\nexport function timeAgo(time) {\n  const between = Date.now() / 1000 - Number(time)\n  if (between < 3600) {\n    return pluralize(~~(between / 60), ' minute')\n  } else if (between < 86400) {\n    return pluralize(~~(between / 3600), ' hour')\n  } else {\n    return pluralize(~~(between / 86400), ' day')\n  }\n}\n\n/**\n * Number formatting\n * like 10000 => 10k\n * @param {number} num\n * @param {number} digits\n */\nexport function numberFormatter(num, digits) {\n  const si = [\n    { value: 1E18, symbol: 'E' },\n    { value: 1E15, symbol: 'P' },\n    { value: 1E12, symbol: 'T' },\n    { value: 1E9, symbol: 'G' },\n    { value: 1E6, symbol: 'M' },\n    { value: 1E3, symbol: 'k' }\n  ]\n  for (let i = 0; i < si.length; i++) {\n    if (num >= si[i].value) {\n      return (num / si[i].value).toFixed(digits).replace(/\\.0+$|(\\.[0-9]*[1-9])0+$/, '$1') + si[i].symbol\n    }\n  }\n  return num.toString()\n}\n\n/**\n * 10000 => \"10,000\"\n * @param {number} num\n */\nexport function toThousandFilter(num) {\n  return (+num || 0).toString().replace(/^-?\\d+/g, m => m.replace(/(?=(?!\\b)(\\d{3})+$)/g, ','))\n}\n\n/**\n * Upper case first char\n * @param {String} string\n */\nexport function uppercaseFirst(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1)\n}\n"]}]}